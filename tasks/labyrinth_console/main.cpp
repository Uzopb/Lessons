#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <Labyrinth.h>
#include <pathfinder.h>

using namespace std;
/* Разработать программу для поиска пути от стартовой позиции до выхода из лабиринта:
1.  загрузить лабиринт из текстового файла, где он закодирован символами:
    0 - свободный проход
    X - стена
    S - старт (всегда один)
    E - выход из лабиринта (может быть несколько)

пример - файл labyrinth.txt:

XXXXXXXXXX
XS0000000X
X0XXXXXX0X
X000000X0X
XXXXXXXX0X
X00000000X
X0XXXXXXXX
X0000000EX
XXXXXXXXXX

лабиринт прямоугольный, т.е. все столбцы имеют одинаковую высоту и все строки - одинаковую длину.

2.  отобразить загруженный лабиринт в графическом окне (использовать библиотеку Qt)

3.  по нажатию на кнопку, расположенную в этом же окне произвести поиск оптимальной траектории от старта до выхода и отобразить ее в окне в лабиринте или, если добраться до выхода невозможно, вывести сообщение.

Ограничения:
1. программа должна быть разработана на языке C++ (14 стандарт)
 c использованием библиотеки Qt (версии 5.11+)
2. разработка должна производиться под контролем системы контроля версий git,
 с синхронизацией во внешний репозиторий (github, bitbucket, etc)
3. при разработке следует использовать объектно-ориентированый подход (сущности задачи должны быть представлены соответствующими классами, e.g. class Labyrinth, class Window, class PathFinder)
 *
 */

int main()
{
    Labyrinth labyrinth;
    //Чтение из файла и определение размерности лабиринта
    labyrinth.size_lab();
    //Инициализация матрицы для лабиринта
    char **matrix;
    matrix = new char *[labyrinth.row];
        for (int i = 0; i < labyrinth.row; i++) {
            matrix[i] = new char [labyrinth.col];
        }
    //Чтение символов из лабиринта в матрицу
    labyrinth.read_lab(matrix);

    PathFinder pathfinder;
    //Поиск кратчайшего пути или его отсутствие
    pathfinder.find_path(matrix, labyrinth.row, labyrinth.col);

    cout << "\n\n";
    //вывод результата
    labyrinth.show_lab(matrix);

    return 0;
}
